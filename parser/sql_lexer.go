// Code generated from grammar/SQL.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SQLLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var SQLLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func sqllexerLexerInit() {
	staticData := &SQLLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "','", "'('", "')'", "'='", "'!='", "'<>'", "'<'", "'<='", "'>'",
		"'>='", "", "", "", "", "", "", "", "", "", "", "", "", "'*'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "SELECT", "FROM", "WHERE",
		"AND", "OR", "NOT", "IN", "LIKE", "IS", "NULL", "TRUE", "FALSE", "STAR",
		"STRING", "NUMBER", "IDENTIFIER", "WS",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "SELECT", "FROM", "WHERE", "AND", "OR", "NOT", "IN", "LIKE",
		"IS", "NULL", "TRUE", "FALSE", "STAR", "STRING", "NUMBER", "IDENTIFIER",
		"WS", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M",
		"N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 27, 279, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4,
		1, 4, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9,
		1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1,
		11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13,
		1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1,
		16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18,
		1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1,
		21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23,
		1, 23, 5, 23, 194, 8, 23, 10, 23, 12, 23, 197, 9, 23, 1, 23, 1, 23, 1,
		24, 4, 24, 202, 8, 24, 11, 24, 12, 24, 203, 1, 24, 1, 24, 4, 24, 208, 8,
		24, 11, 24, 12, 24, 209, 3, 24, 212, 8, 24, 1, 25, 1, 25, 5, 25, 216, 8,
		25, 10, 25, 12, 25, 219, 9, 25, 1, 26, 4, 26, 222, 8, 26, 11, 26, 12, 26,
		223, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1,
		30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35,
		1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1,
		41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46,
		1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1,
		51, 1, 52, 1, 52, 0, 0, 53, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7,
		15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33,
		17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51,
		26, 53, 27, 55, 0, 57, 0, 59, 0, 61, 0, 63, 0, 65, 0, 67, 0, 69, 0, 71,
		0, 73, 0, 75, 0, 77, 0, 79, 0, 81, 0, 83, 0, 85, 0, 87, 0, 89, 0, 91, 0,
		93, 0, 95, 0, 97, 0, 99, 0, 101, 0, 103, 0, 105, 0, 1, 0, 31, 1, 0, 39,
		39, 1, 0, 48, 57, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90,
		95, 95, 97, 122, 3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 65, 65, 97, 97, 2,
		0, 66, 66, 98, 98, 2, 0, 67, 67, 99, 99, 2, 0, 68, 68, 100, 100, 2, 0,
		69, 69, 101, 101, 2, 0, 70, 70, 102, 102, 2, 0, 71, 71, 103, 103, 2, 0,
		72, 72, 104, 104, 2, 0, 73, 73, 105, 105, 2, 0, 74, 74, 106, 106, 2, 0,
		75, 75, 107, 107, 2, 0, 76, 76, 108, 108, 2, 0, 77, 77, 109, 109, 2, 0,
		78, 78, 110, 110, 2, 0, 79, 79, 111, 111, 2, 0, 80, 80, 112, 112, 2, 0,
		81, 81, 113, 113, 2, 0, 82, 82, 114, 114, 2, 0, 83, 83, 115, 115, 2, 0,
		84, 84, 116, 116, 2, 0, 85, 85, 117, 117, 2, 0, 86, 86, 118, 118, 2, 0,
		87, 87, 119, 119, 2, 0, 88, 88, 120, 120, 2, 0, 89, 89, 121, 121, 2, 0,
		90, 90, 122, 122, 259, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0,
		0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1,
		0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21,
		1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0,
		29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0,
		0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0,
		0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0,
		0, 0, 0, 53, 1, 0, 0, 0, 1, 107, 1, 0, 0, 0, 3, 109, 1, 0, 0, 0, 5, 111,
		1, 0, 0, 0, 7, 113, 1, 0, 0, 0, 9, 115, 1, 0, 0, 0, 11, 118, 1, 0, 0, 0,
		13, 121, 1, 0, 0, 0, 15, 123, 1, 0, 0, 0, 17, 126, 1, 0, 0, 0, 19, 128,
		1, 0, 0, 0, 21, 131, 1, 0, 0, 0, 23, 138, 1, 0, 0, 0, 25, 143, 1, 0, 0,
		0, 27, 149, 1, 0, 0, 0, 29, 153, 1, 0, 0, 0, 31, 156, 1, 0, 0, 0, 33, 160,
		1, 0, 0, 0, 35, 163, 1, 0, 0, 0, 37, 168, 1, 0, 0, 0, 39, 171, 1, 0, 0,
		0, 41, 176, 1, 0, 0, 0, 43, 181, 1, 0, 0, 0, 45, 187, 1, 0, 0, 0, 47, 189,
		1, 0, 0, 0, 49, 201, 1, 0, 0, 0, 51, 213, 1, 0, 0, 0, 53, 221, 1, 0, 0,
		0, 55, 227, 1, 0, 0, 0, 57, 229, 1, 0, 0, 0, 59, 231, 1, 0, 0, 0, 61, 233,
		1, 0, 0, 0, 63, 235, 1, 0, 0, 0, 65, 237, 1, 0, 0, 0, 67, 239, 1, 0, 0,
		0, 69, 241, 1, 0, 0, 0, 71, 243, 1, 0, 0, 0, 73, 245, 1, 0, 0, 0, 75, 247,
		1, 0, 0, 0, 77, 249, 1, 0, 0, 0, 79, 251, 1, 0, 0, 0, 81, 253, 1, 0, 0,
		0, 83, 255, 1, 0, 0, 0, 85, 257, 1, 0, 0, 0, 87, 259, 1, 0, 0, 0, 89, 261,
		1, 0, 0, 0, 91, 263, 1, 0, 0, 0, 93, 265, 1, 0, 0, 0, 95, 267, 1, 0, 0,
		0, 97, 269, 1, 0, 0, 0, 99, 271, 1, 0, 0, 0, 101, 273, 1, 0, 0, 0, 103,
		275, 1, 0, 0, 0, 105, 277, 1, 0, 0, 0, 107, 108, 5, 44, 0, 0, 108, 2, 1,
		0, 0, 0, 109, 110, 5, 40, 0, 0, 110, 4, 1, 0, 0, 0, 111, 112, 5, 41, 0,
		0, 112, 6, 1, 0, 0, 0, 113, 114, 5, 61, 0, 0, 114, 8, 1, 0, 0, 0, 115,
		116, 5, 33, 0, 0, 116, 117, 5, 61, 0, 0, 117, 10, 1, 0, 0, 0, 118, 119,
		5, 60, 0, 0, 119, 120, 5, 62, 0, 0, 120, 12, 1, 0, 0, 0, 121, 122, 5, 60,
		0, 0, 122, 14, 1, 0, 0, 0, 123, 124, 5, 60, 0, 0, 124, 125, 5, 61, 0, 0,
		125, 16, 1, 0, 0, 0, 126, 127, 5, 62, 0, 0, 127, 18, 1, 0, 0, 0, 128, 129,
		5, 62, 0, 0, 129, 130, 5, 61, 0, 0, 130, 20, 1, 0, 0, 0, 131, 132, 3, 91,
		45, 0, 132, 133, 3, 63, 31, 0, 133, 134, 3, 77, 38, 0, 134, 135, 3, 63,
		31, 0, 135, 136, 3, 59, 29, 0, 136, 137, 3, 93, 46, 0, 137, 22, 1, 0, 0,
		0, 138, 139, 3, 65, 32, 0, 139, 140, 3, 89, 44, 0, 140, 141, 3, 83, 41,
		0, 141, 142, 3, 79, 39, 0, 142, 24, 1, 0, 0, 0, 143, 144, 3, 99, 49, 0,
		144, 145, 3, 69, 34, 0, 145, 146, 3, 63, 31, 0, 146, 147, 3, 89, 44, 0,
		147, 148, 3, 63, 31, 0, 148, 26, 1, 0, 0, 0, 149, 150, 3, 55, 27, 0, 150,
		151, 3, 81, 40, 0, 151, 152, 3, 61, 30, 0, 152, 28, 1, 0, 0, 0, 153, 154,
		3, 83, 41, 0, 154, 155, 3, 89, 44, 0, 155, 30, 1, 0, 0, 0, 156, 157, 3,
		81, 40, 0, 157, 158, 3, 83, 41, 0, 158, 159, 3, 93, 46, 0, 159, 32, 1,
		0, 0, 0, 160, 161, 3, 71, 35, 0, 161, 162, 3, 81, 40, 0, 162, 34, 1, 0,
		0, 0, 163, 164, 3, 77, 38, 0, 164, 165, 3, 71, 35, 0, 165, 166, 3, 75,
		37, 0, 166, 167, 3, 63, 31, 0, 167, 36, 1, 0, 0, 0, 168, 169, 3, 71, 35,
		0, 169, 170, 3, 91, 45, 0, 170, 38, 1, 0, 0, 0, 171, 172, 3, 81, 40, 0,
		172, 173, 3, 95, 47, 0, 173, 174, 3, 77, 38, 0, 174, 175, 3, 77, 38, 0,
		175, 40, 1, 0, 0, 0, 176, 177, 3, 93, 46, 0, 177, 178, 3, 89, 44, 0, 178,
		179, 3, 95, 47, 0, 179, 180, 3, 63, 31, 0, 180, 42, 1, 0, 0, 0, 181, 182,
		3, 65, 32, 0, 182, 183, 3, 55, 27, 0, 183, 184, 3, 77, 38, 0, 184, 185,
		3, 91, 45, 0, 185, 186, 3, 63, 31, 0, 186, 44, 1, 0, 0, 0, 187, 188, 5,
		42, 0, 0, 188, 46, 1, 0, 0, 0, 189, 195, 5, 39, 0, 0, 190, 194, 8, 0, 0,
		0, 191, 192, 5, 39, 0, 0, 192, 194, 5, 39, 0, 0, 193, 190, 1, 0, 0, 0,
		193, 191, 1, 0, 0, 0, 194, 197, 1, 0, 0, 0, 195, 193, 1, 0, 0, 0, 195,
		196, 1, 0, 0, 0, 196, 198, 1, 0, 0, 0, 197, 195, 1, 0, 0, 0, 198, 199,
		5, 39, 0, 0, 199, 48, 1, 0, 0, 0, 200, 202, 7, 1, 0, 0, 201, 200, 1, 0,
		0, 0, 202, 203, 1, 0, 0, 0, 203, 201, 1, 0, 0, 0, 203, 204, 1, 0, 0, 0,
		204, 211, 1, 0, 0, 0, 205, 207, 5, 46, 0, 0, 206, 208, 7, 1, 0, 0, 207,
		206, 1, 0, 0, 0, 208, 209, 1, 0, 0, 0, 209, 207, 1, 0, 0, 0, 209, 210,
		1, 0, 0, 0, 210, 212, 1, 0, 0, 0, 211, 205, 1, 0, 0, 0, 211, 212, 1, 0,
		0, 0, 212, 50, 1, 0, 0, 0, 213, 217, 7, 2, 0, 0, 214, 216, 7, 3, 0, 0,
		215, 214, 1, 0, 0, 0, 216, 219, 1, 0, 0, 0, 217, 215, 1, 0, 0, 0, 217,
		218, 1, 0, 0, 0, 218, 52, 1, 0, 0, 0, 219, 217, 1, 0, 0, 0, 220, 222, 7,
		4, 0, 0, 221, 220, 1, 0, 0, 0, 222, 223, 1, 0, 0, 0, 223, 221, 1, 0, 0,
		0, 223, 224, 1, 0, 0, 0, 224, 225, 1, 0, 0, 0, 225, 226, 6, 26, 0, 0, 226,
		54, 1, 0, 0, 0, 227, 228, 7, 5, 0, 0, 228, 56, 1, 0, 0, 0, 229, 230, 7,
		6, 0, 0, 230, 58, 1, 0, 0, 0, 231, 232, 7, 7, 0, 0, 232, 60, 1, 0, 0, 0,
		233, 234, 7, 8, 0, 0, 234, 62, 1, 0, 0, 0, 235, 236, 7, 9, 0, 0, 236, 64,
		1, 0, 0, 0, 237, 238, 7, 10, 0, 0, 238, 66, 1, 0, 0, 0, 239, 240, 7, 11,
		0, 0, 240, 68, 1, 0, 0, 0, 241, 242, 7, 12, 0, 0, 242, 70, 1, 0, 0, 0,
		243, 244, 7, 13, 0, 0, 244, 72, 1, 0, 0, 0, 245, 246, 7, 14, 0, 0, 246,
		74, 1, 0, 0, 0, 247, 248, 7, 15, 0, 0, 248, 76, 1, 0, 0, 0, 249, 250, 7,
		16, 0, 0, 250, 78, 1, 0, 0, 0, 251, 252, 7, 17, 0, 0, 252, 80, 1, 0, 0,
		0, 253, 254, 7, 18, 0, 0, 254, 82, 1, 0, 0, 0, 255, 256, 7, 19, 0, 0, 256,
		84, 1, 0, 0, 0, 257, 258, 7, 20, 0, 0, 258, 86, 1, 0, 0, 0, 259, 260, 7,
		21, 0, 0, 260, 88, 1, 0, 0, 0, 261, 262, 7, 22, 0, 0, 262, 90, 1, 0, 0,
		0, 263, 264, 7, 23, 0, 0, 264, 92, 1, 0, 0, 0, 265, 266, 7, 24, 0, 0, 266,
		94, 1, 0, 0, 0, 267, 268, 7, 25, 0, 0, 268, 96, 1, 0, 0, 0, 269, 270, 7,
		26, 0, 0, 270, 98, 1, 0, 0, 0, 271, 272, 7, 27, 0, 0, 272, 100, 1, 0, 0,
		0, 273, 274, 7, 28, 0, 0, 274, 102, 1, 0, 0, 0, 275, 276, 7, 29, 0, 0,
		276, 104, 1, 0, 0, 0, 277, 278, 7, 30, 0, 0, 278, 106, 1, 0, 0, 0, 8, 0,
		193, 195, 203, 209, 211, 217, 223, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SQLLexerInit initializes any static state used to implement SQLLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSQLLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SQLLexerInit() {
	staticData := &SQLLexerLexerStaticData
	staticData.once.Do(sqllexerLexerInit)
}

// NewSQLLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSQLLexer(input antlr.CharStream) *SQLLexer {
	SQLLexerInit()
	l := new(SQLLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &SQLLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "SQL.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SQLLexer tokens.
const (
	SQLLexerT__0       = 1
	SQLLexerT__1       = 2
	SQLLexerT__2       = 3
	SQLLexerT__3       = 4
	SQLLexerT__4       = 5
	SQLLexerT__5       = 6
	SQLLexerT__6       = 7
	SQLLexerT__7       = 8
	SQLLexerT__8       = 9
	SQLLexerT__9       = 10
	SQLLexerSELECT     = 11
	SQLLexerFROM       = 12
	SQLLexerWHERE      = 13
	SQLLexerAND        = 14
	SQLLexerOR         = 15
	SQLLexerNOT        = 16
	SQLLexerIN         = 17
	SQLLexerLIKE       = 18
	SQLLexerIS         = 19
	SQLLexerNULL       = 20
	SQLLexerTRUE       = 21
	SQLLexerFALSE      = 22
	SQLLexerSTAR       = 23
	SQLLexerSTRING     = 24
	SQLLexerNUMBER     = 25
	SQLLexerIDENTIFIER = 26
	SQLLexerWS         = 27
)
